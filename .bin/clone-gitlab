#!/usr/bin/env php
<?php

declare(strict_types=1);
exit(main($argv));

function main(array $argv)
{
    error_reporting(-1);
    if (version_compare(PHP_VERSION, '7.0.0', '<')) {
        error_log('PHP â‰¥ 7.0.0 required.');
        return 1;
    }

    if (count($argv) !== 3) {
        error_log("usage: clone-gitlab DOMAIN TOKEN\n");
        return 1;
    }
    $domain = $argv[1];
    $token = $argv[2];

    foreach (get_repos($domain, $token) as $uri => $path) {
        clone_repo($uri, $path);
    }

    return 0;
}

function clone_repo(string $uri, string $path)
{
    if (!prepare_repo($path)) {
        return;
    }

    $cmd = sprintf(
        'git clone %s %s',
        escapeshellarg($uri),
        escapeshellarg($path)
    );

    echo "\n$cmd\n";
    passthru($cmd);
}

/**
 * @return false if the repo should be skipped, true otherwise
 */
function prepare_repo(string $path): bool
{
    if (file_exists($path)) {
        error_log("Directory exists, skipping: $path");
        return false;
    }

    $parent = dirname($path);
    if (!file_exists($parent)) {
        if (!mkdir($parent, 0755, true)) {
            error_log("Could not create parent directory, skipping: $path");
            return false;
        }
    }

    if (file_exists($parent) && (!is_writeable($parent) || !is_dir($parent))) {
        error_log("Can't write to parent directory, skipping: $path");
        return false;
    }

    return true;
}

/**
 * @return array URL => path
 */
function get_repos(string $domain, string $token): array
{
    $repos = [];
    $projects = api_request($domain, '/projects', $token);
    foreach ($projects as $project) {
        $repos[$project->ssh_url_to_repo] = $project->path_with_namespace;
    }

    return $repos;
}

/**
 * @return mixed decoded JSON
 */
function api_request(string $domain, string $path, string $token)
{
    $uri = sprintf('https://%s/api/v3%s', $domain, $path);
    $context = stream_context_create([
        'http' => [
            'header' => "PRIVATE-TOKEN: $token\r\n"
        ],
    ]);

    return json_decode(file_get_contents($uri, false, $context));
}
