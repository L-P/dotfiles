export PATH="${PATH}:${HOME}/.local/bin:/opt/go/bin"
export PYTHONSTARTUP="${HOME}/.local/bin/pythonstartup.py"

# Uploading sessions by default is the worst possible idea.
export ASCIINEMA_API_URL="https://0.0.0.0/"

if $(which tt &> /dev/null); then
    if ! $(tt &> /dev/null); then
        echo "No running task, please manage your time."
    fi
fi

export EDITOR=vim # Scarcely used (see `update-alternatives --config editor`)

export LC_ALL=C.UTF-8
export FUNCTIONS_CORE_TOOLS_TELEMETRY_OPTOUT=1

# Nicer less by default
export LESS='-RFXS -x4 -n'
export PAGER='less'
export MANPAGER='less'

# 256 colors, except on TTY.
if [ "$TERM" != "linux" ]; then
    export TERM='xterm-256color'
fi

# Color aliases
alias grep='grep --color=auto'
alias tree='tree -C'

# Aliases
alias cal='ncal -Mb'
alias cdr='cd $(git rev-parse --show-toplevel)'
alias gd='git diff -M -C'
alias gds='git diff -M -C --staged'
alias gpf='git push --force-with-lease'
alias gs='git status --short'
alias gap='git add -p'
alias la='ll -va'
alias ll='ls -vlh'
alias ls='ls --group-directories-first --color=auto -v'
alias mkdir='mkdir -pv'
alias optipng='optipng -strip all -o7'
alias phpcbf='phpcbf --standard=PSR12'
alias phpcs='phpcs --standard=PSR12'
alias py='python3'
alias rm='rm --preserve-root'
alias tf='terraform'
alias tfp='clear; rm -f plan 2>/dev/null; terraform plan -out plan'
alias tfa='terraform apply plan'
alias uuid='cat /proc/sys/kernel/random/uuid'

# Forgetting to sudo with docker.
export DOCKER='sudo docker'
export COMPOSE='sudo docker-compose'
alias docker='sudo docker'
alias docker-compose='sudo docker-compose'

alias dcb='sudo docker-compose build'
alias dcd='sudo docker-compose down'
alias dce='sudo docker-compose exec'
alias dcl='sudo docker-compose logs --follow'
alias dcr='sudo docker-compose restart'
alias dcs='sudo docker-compose stop'
alias dcu='sudo docker-compose up'

# tmux for the lazy.
t() {
    tmux a -t "$1" || tmux new -s "$1"
}

# Nicer du (ncdu is nice too).
duf() {
    du --apparent-size -csh -- "$@" | sort -rh
}

# Handy grep aliases, since ack sucks.
g() {
	grep -EHnr --exclude-dir='node_modules' --exclude-dir='vendor' --exclude-dir='.git' "$*" . | "$PAGER" ;
}
gi() {
	grep -EHnri --exclude-dir='node_modules' --exclude-dir='vendor' --exclude-dir='.git' "$*" . | "$PAGER" ;
}

# Same aliases for the faster git grep.
gg() {
	git grep -En "$@"
}
ggi() {
	git grep -Eni "$@"
}

# Find aliases
f() {
    find . -iname "*$**" 2>/dev/null | grep -Ev '^\./(vendor|node_modules)/'
}
ff() {
	find . -type "f" -iname "*$**" 2>/dev/null | grep -Ev '^\./(vendor|node_modules)/'
}
fd() {
	find . -type d -iname "*$**" 2>/dev/null | grep -Ev '^\./(vendor|node_modules)/'
}

# Make a git repo with an empty commit
mkrepo() {
    (
        mkdir "$1"
        pushd "$1"
        git init
        git ci --allow-empty -m "Initial commit"
        popd ..
    ) > /dev/null
}

# Unmount a SSHFS.
ufs() {
    fusermount -u "$1"
}

# Mount a SSHFS.
fs() {
    local src="$1"
    local dest="$2"

    [ -d "$dest" ] || mkdir "$dest"

    ufs "$dest" > /dev/null
    sshfs "$src" "$dest"
}

# Examine a x509 cert.
cert() {
    openssl x509 -in "$1" -text -noout
}

hl() {
    hledger is -p 'this month'
    printf "-------------------\n-------------------\n"
    hledger bs -p 'this month'
}

hlp() {
    hledger is -p "$*"
    printf "-------------------\n-------------------\n"
    hledger bs -p "$*"
}

ts() {
    date "-d@$1"
}

# Convert a SVG to PNG
# svg2png FILE WIDTH
svg2png() {
    inkscape --export-png="$1.png" --export-width="$2" --export-background-opacity=0 --without-gui "$1"
}

pass() {
    val="$(dd if=/dev/urandom bs=1 count=36 status=none | base64)"
    echo -n "$val" | xclip
    echo "$val"
}

gv() {
    vim -q <(grep -nr "$@" .) +copen
}

gvi() {
    vim -q <(grep -inr "$@" .) +copen
}

ggv() {
    vim -q <(git grep -n "$@") +copen
}

ggvi() {
    vim -q <(git grep -in "$@") +copen
}

repl() {
    while true; do
        clear
        "$@"
        read
    done
}

rekey() {
    gpg-connect-agent "scd serialno" "learn --force" /bye
}

# fix PATTERN
# Commits the index as a fixup to the first commit that matches PATTERN
fix() {
    sha="$(git log -n 1 --format='%H' -F -i --grep "$*")"
    if [ '' = "$sha" ]; then
        echo 'No commit found.' 1>&2
        return 1
    fi

    git commit --fix "$sha"
}

# dcredo SERVICENAME
dcredo() {
    docker-compose stop "$1" && \
    docker-compose rm -f "$1" && \
    docker-compose up -d
}

nonce() {
    nonce="$(dd if=/dev/urandom bs=1 count=4 status=none | xxd -p)"
    printf "%s" "$nonce" | xclip
    echo "$nonce"
}
