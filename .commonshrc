function unlock() {
    /usr/bin/keychain --agents gpg 0889A1CD
    source $HOME/.keychain/$HOST-sh-gpg
}

# Start SSH agent if not connected via SSH.
if [ "root" != "$(whoami)" -a -z "$SSH_CLIENT" -a -z "$SSH_TTY" ]; then
    /usr/bin/keychain --quiet $(ls $HOME/.ssh | grep -Ev '(authorized_keys|config|known_hosts|.pub$)')
    source $HOME/.keychain/$HOST-sh
fi

export PATH=~/.bin:$PATH
export EDITOR=vim # Scarcely used (see `update-alternatives --config editor`)
export LC_ALL=C.UTF-8

# Nicer less by default
export LESS='-RFXS -x4'
export PAGER='less'
export MANPAGER='less'

# 256 colors, except on TTY.
if [ "$TERM" = "screen" ]; then
    export TERM='screen-256color'
elif [ "$TERM" != "linux" ]; then
    export TERM='xterm-256color'
fi

# Color aliases
alias grep='grep --color=auto'
alias tree='tree -C'

# Aliases
alias ls='ls --group-directories-first --color -v'
alias ll='ls -vlh'
alias la='ll -va'
alias mkdir='mkdir -pv'
alias rm='rm --preserve-root'
alias gd='git diff -M -C'
alias gds='git diff -M -C --staged'
alias gs='git status --short'
alias py='python3'
alias ripit='ripit -o /dev/shm/ripit -c 2 -q 8' # FLAC @ max comp.
alias json='json_reformat | pygmentize -l json'
alias cdr='cd $(git rev-parse --show-toplevel)'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Typos
alias cim='vim'
alias vp='cp'
alias :q='exit'
alias :e='vim'
alias :tabe='vim'

# tmux for the lazy.
function t() {
    tmux a -t $1 || tmux new -s $1
}

# Nicer du (ncdu is nice too).
function duf() {
    du -csh -- "$@" | sort -rh
}

# Handy grep aliases, since ack sucks.
function g() {
	grep --color=always -EHnr --exclude-dir='.svn' --exclude-dir='.git' $@ . | $PAGER ;
}
function gi() {
	grep --color=always -EHnri --exclude-dir='.svn' --exclude-dir='.git' $@ . | $PAGER ;
}

# Same aliases for the faster git grep.
function gg() {
	git grep --color=always -En $@
}
function ggi() {
	git grep --color=always -Eni $@
}

# Find aliases
function f() {
	find . -iname "*$@*"
}
function ff() {
	find . -type f -iname "*$@*"
}
function fd() {
	find . -type d -iname "*$@*"
}

# Make a git repo with an empty commit
function mkrepo() {
    (
        mkdir $1
        pushd $1
        git init
        git ci --allow-empty -m "Initial commit."
        popd ..
    ) > /dev/null
}

# Record terminal input/output to file.
function record() {
    local date="$(date --rfc-3339=seconds | sed 's/ /_/g')"
    local dir="$HOME/.terminal_recordings"
    mkdir -p "$dir" &> /dev/null
    script -t "$dir/script_$date" 2> "$dir/timing_$date"
}

# Echo a ready-to-copy scp command to get a file.
function getscp() {
    local ip="$(ip addr show eth0  | grep 'inet[^6]' | cut -d' ' -f6 | cut -d'/' -f1)"
    echo "scp $(whoami)@$ip:$(pwd)/$1 ."
}

# List all git repositories.
function repos() {
    find . -type d -name .git | sed -r 's/(\/\.git)$//'
}

# Run a git command on all git repositories found in the current dir and subdirs.
function mgit() {
    (
    for repo in $(repos); do
        pushd "$repo" > /dev/null
        echo "\n$repo"
        git "$@"
        popd > /dev/null
    done
    ) 2>&1 | $(git config core.pager || echo 'less')
}

# Update (fetch-only) all repositories in current dir and subsdirs.
function update_repos() {
    mgit remote update --prune
}

# Unmount a SSHFS.
function ufs() {
    fusermount -u "$1"
}

# Mount a SSHFS.
function fs() {
    local src="$1"
    local dest="$2"

    [ -d "$dest" ] || mkdir "$dest"

    ufs "$dest" > /dev/null
    sshfs "$src" "$dest"
}

# Examine a x509 cert.
function cert() {
    openssl x509 -in "$1" -text -noout
}


function hl() {
    hledger is -p 'this month'
    echo "-------------------\n-------------------"
    hledger bs -p 'this month'
}

function hlc() {
    hledger is --cleared -p 'this month'
    echo "-------------------\n-------------------"
    hledger bs --cleared -p 'this month'
}

function hlu() {
    hledger is --uncleared -p 'this month'
    echo "-------------------\n-------------------"
    hledger bs --uncleared -p 'this month'
}
